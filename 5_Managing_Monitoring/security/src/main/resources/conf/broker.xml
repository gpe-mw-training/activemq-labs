<?xml version="1.0" encoding="UTF-8"?>
<!--  
    Secure ActiveMQ broker
    For more information, see:
    
    http://activemq.apache.org/security.html
    
    Before you can run this configuration, you need to set ACTIVEMQ_ENCRYPTION_PASSWORD environment variable, like
    
    $ export ACTIVEMQ_ENCRYPTION_PASSWORD=activemq
    
    For more information see: http://activemq.apache.org/encrypted-passwords.html
    
    To run ActiveMQ with this configuration add xbean:examples/conf/broker.xml to your command
    
    e.g. $ bin/activemq console xbean:examples/conf/broker.xml
 -->
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
  http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
  http://activemq.apache.org/schema/core
    http://activemq.apache.org/schema/core/activemq-core.xsd">

    <!-- Allows us to use encrypted system properties as variables in this configuration file -->
    <bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
        <property name="algorithm" value="PBEWithMD5AndDES"/>
        <property name="password" value="activemq"/>
    </bean>

    <bean id="propertyConfigurer" class="org.jasypt.spring.properties.EncryptablePropertyPlaceholderConfigurer">
        <constructor-arg ref="configurationEncryptor"/>
        <property name="location" value="file:./target/classes/credentials.properties"/>
    </bean>

    <broker useJmx="true" persistent="false" xmlns="http://activemq.apache.org/schema/core">

        <!-- Use a non-default port in case the default port is in use -->
        <managementContext>
            <managementContext connectorPort="1199"/>
        </managementContext>

        <plugins>
            <!-- Configure authentication; Username, passwords and groups -->
            <simpleAuthenticationPlugin>
                <users>
                    <authenticationUser username="system" password="${activemq.password}"
                                        groups="users,admins"/>
                    <authenticationUser username="user" password="${guest.password}"
                                        groups="users"/>
                    <authenticationUser username="guest" password="${guest.password}" groups="guests"/>
                </users>
            </simpleAuthenticationPlugin>


            <!--  Lets configure a destination based authorization mechanism -->
            <authorizationPlugin>
                <map>
                    <authorizationMap>
                        <authorizationEntries>
                            <authorizationEntry queue=">" read="admins" write="admins" admin="admins"/>
                            <authorizationEntry queue="USERS.>" read="users" write="users" admin="users"/>
                            <authorizationEntry queue="GUEST.>" read="guests" write="guests,users"
                                                admin="guests,users"/>

                            <authorizationEntry queue="TEST.Q" read="guests" write="guests"/>

                            <authorizationEntry topic=">" read="admins" write="admins" admin="admins"/>
                            <authorizationEntry topic="USERS.>" read="users" write="users" admin="users"/>
                            <authorizationEntry topic="GUEST.>" read="guests" write="guests,users"
                                                admin="guests,users"/>

                            <authorizationEntry topic="ActiveMQ.Advisory.>" read="guests,users" write="guests,users"
                                                admin="guests,users"/>
                        </authorizationEntries>
                    </authorizationMap>
                </map>
            </authorizationPlugin>
        </plugins>

        <transportConnectors>
            <transportConnector name="openwire" uri="tcp://0.0.0.0:61616"/>
        </transportConnectors>

        <!-- destroy the spring context on shutdown to stop jetty -->
        <shutdownHooks>
            <bean xmlns="http://www.springframework.org/schema/beans"
                  class="org.apache.activemq.hooks.SpringContextHook"/>
        </shutdownHooks>

    </broker>

    <!-- Use Web applications and Camel in secured broker environment
    <import resource="jetty.xml"/>
      -->

</beans>
